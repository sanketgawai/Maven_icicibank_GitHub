<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="4" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-12T15:26:22 IST" name="Suite" finished-at="2023-03-12T15:26:51 IST" duration-ms="28715">
    <groups>
    </groups>
    <test started-at="2023-03-12T15:26:22 IST" name="ChromeTest" finished-at="2023-03-12T15:26:34 IST" duration-ms="12059">
      <class name="testNG.TestClassXYZ">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:23 IST" name="openBrowser" finished-at="2023-03-12T15:26:24 IST" duration-ms="624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="creatPomObjects()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:24 IST" name="creatPomObjects" finished-at="2023-03-12T15:26:24 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatPomObjects -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:24 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:26 IST" duration-ms="2598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:26 IST" name="verifyDownloadFilebutton" finished-at="2023-03-12T15:26:28 IST" duration-ms="1266" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/form-center?ITM=nli_cms_form_center_footer_link]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/form-center?ITM=nli_cms_form_center_footer_link]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testNG.TestClassXYZ.verifyDownloadFilebutton(TestClassXYZ.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDownloadFilebutton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:28 IST" name="afterMethod" finished-at="2023-03-12T15:26:28 IST" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDownloadFilebutton status=FAILURE method=TestClassXYZ.verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:28 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:29 IST" duration-ms="1074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:29 IST" name="verifytoGrowWelthButton" finished-at="2023-03-12T15:26:29 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytoGrowWelthButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:29 IST" name="afterMethod" finished-at="2023-03-12T15:26:29 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifytoGrowWelthButton status=SUCCESS method=TestClassXYZ.verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:29 IST" name="afterClass" finished-at="2023-03-12T15:26:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNG.TestClassXYZ@7e0b85f9]" started-at="2023-03-12T15:26:34 IST" name="afterTest" finished-at="2023-03-12T15:26:34 IST" duration-ms="101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNG.TestClassXYZ -->
      <class name="testNG.TestClassABC">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:22 IST" name="openBrowser" finished-at="2023-03-12T15:26:23 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="creatPomObjects()[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:29 IST" name="creatPomObjects" finished-at="2023-03-12T15:26:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatPomObjects -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:29 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:32 IST" duration-ms="2887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:32 IST" name="verifyDownloadFilebutton" finished-at="2023-03-12T15:26:33 IST" duration-ms="1180" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/form-center?ITM=nli_cms_form_center_footer_link]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/form-center?ITM=nli_cms_form_center_footer_link]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testNG.TestClassABC.verifyDownloadFilebutton(TestClassABC.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDownloadFilebutton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:33 IST" name="afterMethod" finished-at="2023-03-12T15:26:33 IST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDownloadFilebutton status=FAILURE method=TestClassABC.verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassABC@31d7b7bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:33 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:34 IST" duration-ms="897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:34 IST" name="verifytoGrowWelthButton" finished-at="2023-03-12T15:26:34 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytoGrowWelthButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:34 IST" name="afterMethod" finished-at="2023-03-12T15:26:34 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifytoGrowWelthButton status=SUCCESS method=TestClassABC.verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassABC@31d7b7bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:34 IST" name="afterTest" finished-at="2023-03-12T15:26:34 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testNG.TestClassABC@31d7b7bf]" started-at="2023-03-12T15:26:34 IST" name="afterClass" finished-at="2023-03-12T15:26:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testNG.TestClassABC -->
    </test> <!-- ChromeTest -->
    <test started-at="2023-03-12T15:26:34 IST" name="FirefoxTest" finished-at="2023-03-12T15:26:51 IST" duration-ms="16636">
      <class name="testNG.TestClassXYZ">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:36 IST" name="openBrowser" finished-at="2023-03-12T15:26:38 IST" duration-ms="1492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="creatPomObjects()[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:38 IST" name="creatPomObjects" finished-at="2023-03-12T15:26:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatPomObjects -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:38 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:41 IST" duration-ms="2908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:41 IST" name="verifyDownloadFilebutton" finished-at="2023-03-12T15:26:41 IST" duration-ms="474" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testNG.TestClassXYZ.verifyDownloadFilebutton(TestClassXYZ.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDownloadFilebutton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:41 IST" name="afterMethod" finished-at="2023-03-12T15:26:41 IST" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDownloadFilebutton status=FAILURE method=TestClassXYZ.verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassXYZ@6e171cd7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:41 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:42 IST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:42 IST" name="verifytoGrowWelthButton" finished-at="2023-03-12T15:26:42 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytoGrowWelthButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:42 IST" name="afterMethod" finished-at="2023-03-12T15:26:42 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifytoGrowWelthButton status=SUCCESS method=TestClassXYZ.verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassXYZ@6e171cd7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:42 IST" name="afterClass" finished-at="2023-03-12T15:26:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNG.TestClassXYZ@6e171cd7]" started-at="2023-03-12T15:26:50 IST" name="afterTest" finished-at="2023-03-12T15:26:51 IST" duration-ms="633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNG.TestClassXYZ -->
      <class name="testNG.TestClassABC">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:34 IST" name="openBrowser" finished-at="2023-03-12T15:26:36 IST" duration-ms="1978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="creatPomObjects()[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:42 IST" name="creatPomObjects" finished-at="2023-03-12T15:26:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creatPomObjects -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:42 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:48 IST" duration-ms="5147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:48 IST" name="verifyDownloadFilebutton" finished-at="2023-03-12T15:26:48 IST" duration-ms="418" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [https://www.icicibank.com/form-center] but found [https://www.icicibank.com/]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testNG.TestClassABC.verifyDownloadFilebutton(TestClassABC.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDownloadFilebutton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:48 IST" name="afterMethod" finished-at="2023-03-12T15:26:48 IST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDownloadFilebutton status=FAILURE method=TestClassABC.verifyDownloadFilebutton()[pri:0, instance:testNG.TestClassABC@59fd97a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMehtod()[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:48 IST" name="beforeMehtod" finished-at="2023-03-12T15:26:50 IST" duration-ms="1153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehtod -->
        <test-method signature="verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:50 IST" name="verifytoGrowWelthButton" finished-at="2023-03-12T15:26:50 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytoGrowWelthButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:50 IST" name="afterMethod" finished-at="2023-03-12T15:26:50 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifytoGrowWelthButton status=SUCCESS method=TestClassABC.verifytoGrowWelthButton()[pri:0, instance:testNG.TestClassABC@59fd97a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:50 IST" name="afterClass" finished-at="2023-03-12T15:26:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testNG.TestClassABC@59fd97a8]" started-at="2023-03-12T15:26:50 IST" name="afterTest" finished-at="2023-03-12T15:26:50 IST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testNG.TestClassABC -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- Suite -->
</testng-results>
